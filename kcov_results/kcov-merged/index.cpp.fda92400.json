var data = {lines:[
{"lineNum":"    1","line":"#include \"handt.h\""},
{"lineNum":"    2","line":"#include <algorithm>"},
{"lineNum":"    3","line":"#include <iomanip>"},
{"lineNum":"    4","line":"#include <iostream>"},
{"lineNum":"    5","line":"#include <map>"},
{"lineNum":"    6","line":"#include <numeric>"},
{"lineNum":"    7","line":"#include <string>"},
{"lineNum":"    8","line":"#include <vector>"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"int main() {","class":"lineCov","hits":"1",},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"  // Configure debug"},
{"lineNum":"   13","line":"  std::stringstream out;","class":"lineCov","hits":"1",},
{"lineNum":"   14","line":"  out.precision(2);","class":"lineCov","hits":"1",},
{"lineNum":"   15","line":"  out << std::fixed;","class":"lineCov","hits":"1",},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"  // Get some data to play with"},
{"lineNum":"   18","line":"  const auto &open = handt::get_final_positions();","class":"lineCov","hits":"1",},
{"lineNum":"   19","line":"  const auto &closed = handt::get_closed_positions();","class":"lineCov","hits":"1",},
{"lineNum":"   20","line":"  const auto &symbols = handt::get_symbols().size();","class":"lineCov","hits":"1",},
{"lineNum":"   21","line":"  const unsigned long batch_size = 80UL;","class":"lineCov","hits":"1",},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"  const std::string exchange =","class":"lineCov","hits":"1",},
{"lineNum":"   24","line":"      \"<a href=\'https://www.cryptocompare.com/api/\'>CryptoCompare</a>\";","class":"lineCov","hits":"1",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"  // Print the bulk of the HTML"},
{"lineNum":"   27","line":"  out << R\"(","class":"lineCov","hits":"1",},
{"lineNum":"   28","line":"<!DOCTYPE html>"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"<meta charset=\"UTF-8\">"},
{"lineNum":"   31","line":"<meta name=\"robots\" content=\"index,follow\" />"},
{"lineNum":"   32","line":"<link rel=icon href=\"favicon.ico\" sizes=\"any\">"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"<script>"},
{"lineNum":"   35","line":"  setInterval(function() {"},
{"lineNum":"   36","line":"    if (window.location.href.split(\"?\").pop() !== \"noreload\")"},
{"lineNum":"   37","line":"      window.location.reload();"},
{"lineNum":"   38","line":"    }, 60000);"},
{"lineNum":"   39","line":"</script>"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"<style>"},
{"lineNum":"   42","line":"body {"},
{"lineNum":"   43","line":"  font-family: sans-serif;"},
{"lineNum":"   44","line":"  background-color: #234;"},
{"lineNum":"   45","line":"  color: white;"},
{"lineNum":"   46","line":"  padding: 40px;"},
{"lineNum":"   47","line":"}"},
{"lineNum":"   48","line":"a:link, a:visited { color: lightblue; }"},
{"lineNum":"   49","line":"h1 {"},
{"lineNum":"   50","line":"  font-size: 100%;"},
{"lineNum":"   51","line":"  text-transform: uppercase;"},
{"lineNum":"   52","line":"  color: darkorange;"},
{"lineNum":"   53","line":"}"},
{"lineNum":"   54","line":"p.disclaimer { max-width: 700px; }"},
{"lineNum":"   55","line":"</style>"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"<title>Have A Nice Day Trader</title>"},
{"lineNum":"   58","line":"<h1>Have A Nice Day Trader</h1>"},
{"lineNum":"   59","line":"<p class=\"disclaimer\">History is no indicator of future performance. Don\'t invest"},
{"lineNum":"   60","line":"what you can\'t afford to lose.</p>"},
{"lineNum":"   61","line":")\""},
{"lineNum":"   62","line":"      << \"\\n\\n<p class=\'disclaimer\'>24 hours of prices are fetched for \"","class":"lineCov","hits":"1",},
{"lineNum":"   63","line":"      << symbols << \" coins from \" << exchange << \" at a rate of \" << batch_size","class":"lineCov","hits":"1",},
{"lineNum":"   64","line":"      << \" per minute&mdash;a limit set by the exchange&mdash;therefore it \"","class":"lineCov","hits":"1",},
{"lineNum":"   65","line":"         \"takes \""},
{"lineNum":"   66","line":"      << symbols / batch_size","class":"lineCov","hits":"1",},
{"lineNum":"   67","line":"      << \" minutes to process the full set of coins. A library of strategies \"","class":"lineCov","hits":"1",},
{"lineNum":"   68","line":"         \"runs over each batch and a position is created if a strategy \""},
{"lineNum":"   69","line":"         \"returns positively. Positions are closed if the return exceeds \""},
{"lineNum":"   70","line":"      << handt::sell_threshold * 100.0 << \"&nbsp;%, falls below \"","class":"lineCov","hits":"1",},
{"lineNum":"   71","line":"      << handt::cut_losses_threshold * 100.0 << \"&nbsp;%\"","class":"lineCov","hits":"1",},
{"lineNum":"   72","line":"      << \" or 24 hours have elapsed since creation. See the \"","class":"lineCov","hits":"1",},
{"lineNum":"   73","line":"         \"<a href=\'https://deanturpin.github.io/handt\'>documentation</a>\""},
{"lineNum":"   74","line":"         \" or <a href=\'https://github.com/deanturpin/handt/issues/new\' \""},
{"lineNum":"   75","line":"         \"target=\'____\'>raise an issue</a>.</p>\""},
{"lineNum":"   76","line":"         \"<p>Coins processed since 16&nbsp;April&nbsp;2018: \""},
{"lineNum":"   77","line":"      << handt::get_stats() << \", see recent <a href=\'kcov_results/\'>code \"","class":"lineCov","hits":"1",},
{"lineNum":"   78","line":"                               \"coverage results</a>.</p>\\n\\n\";"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"  // Structure for reporting strategy performance"},
{"lineNum":"   81","line":"  struct strategy_summary {","class":"lineCov","hits":"1",},
{"lineNum":"   82","line":"    std::string name;"},
{"lineNum":"   83","line":"    double yield;"},
{"lineNum":"   84","line":"    std::vector<double> returns;"},
{"lineNum":"   85","line":"    std::map<std::string, unsigned long> symbols;"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"    // Calculate average yield of all the positions created by current strategy"},
{"lineNum":"   88","line":"    double average_yield() const {","class":"lineCov","hits":"1",},
{"lineNum":"   89","line":"      return std::accumulate(returns.cbegin(), returns.cend(), 0.0,","class":"lineCov","hits":"1",},
{"lineNum":"   90","line":"                             [](auto &sum, const auto &y) { return sum + y; }) /","class":"lineCov","hits":"1",},
{"lineNum":"   91","line":"             (returns.size() > 0 ? returns.size() : 1);","class":"lineCov","hits":"1",},
{"lineNum":"   92","line":"    }"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"    // Return list of symbols that matured under current strategy"},
{"lineNum":"   95","line":"    std::string symbol_list() const {","class":"lineNoCov","hits":"0",},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"      std::stringstream symbol_string;","class":"lineNoCov","hits":"0",},
{"lineNum":"   98","line":"      for (const auto &symbol : symbols)","class":"lineNoCov","hits":"0",},
{"lineNum":"   99","line":"        symbol_string << symbol.first << \' \';","class":"lineNoCov","hits":"0",},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"      return symbol_string.str();","class":"lineNoCov","hits":"0",},
{"lineNum":"  102","line":"    }","class":"lineNoCov","hits":"0",},
{"lineNum":"  103","line":"  };"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"  // Iterate over all closed positions and create strategy summary"},
{"lineNum":"  106","line":"  std::vector<strategy_summary> all_coins;","class":"lineCov","hits":"1",},
{"lineNum":"  107","line":"  for (const auto &position : closed) {","class":"lineCov","hits":"1",},
{"lineNum":"  108","line":"    const auto strategy = position.strategy;","class":"lineCov","hits":"1",},
{"lineNum":"  109","line":"    const auto it ="},
{"lineNum":"  110","line":"        find_if(all_coins.begin(), all_coins.end(),","class":"lineCov","hits":"1",},
{"lineNum":"  111","line":"                [&strategy](const auto &s) { return strategy == s.name; });","class":"lineCov","hits":"1",},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"    // If strategy record doesn\'t exist, create a new one and insert it"},
{"lineNum":"  114","line":"    if (it == all_coins.end()) {","class":"lineCov","hits":"1",},
{"lineNum":"  115","line":"      strategy_summary strat;","class":"lineCov","hits":"1",},
{"lineNum":"  116","line":"      strat.name = strategy;","class":"lineCov","hits":"1",},
{"lineNum":"  117","line":"      strat.returns.push_back(position.yield());","class":"lineCov","hits":"1",},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"      // Only store symbol if it\'s matured"},
{"lineNum":"  120","line":"      if (position.yield() > .90) // handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  121","line":"        strat.symbols[position.symbol] = 1;","class":"lineCov","hits":"1",},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"      all_coins.emplace_back(strat);","class":"lineCov","hits":"1",},
{"lineNum":"  124","line":"    } else {","class":"lineCov","hits":"1",},
{"lineNum":"  125","line":"      // Otherwise just update the position count"},
{"lineNum":"  126","line":"      it->returns.push_back(position.yield());","class":"lineCov","hits":"1",},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"      // Only store symbol if it\'s matured"},
{"lineNum":"  129","line":"      if (position.yield() > handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  130","line":"        ++it->symbols[position.symbol];","class":"lineCov","hits":"1",},
{"lineNum":"  131","line":"    }"},
{"lineNum":"  132","line":"  }","class":"lineCov","hits":"1",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"  // Iterate over Coinbase closed positions and create strategy summary"},
{"lineNum":"  135","line":"  std::vector<strategy_summary> coinbase;","class":"lineCov","hits":"1",},
{"lineNum":"  136","line":"  for (const auto &position : closed) {","class":"lineCov","hits":"1",},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"    // We\'re only interested in currency you can buy on Coinbase"},
{"lineNum":"  139","line":"    if (position.symbol == \"ETH\" || position.symbol == \"BTC\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  140","line":"        position.symbol == \"BCH\" || position.symbol == \"LTC\") {","class":"lineCov","hits":"1",},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"      const auto strategy = position.strategy;","class":"lineCov","hits":"1",},
{"lineNum":"  143","line":"      const auto it ="},
{"lineNum":"  144","line":"          find_if(coinbase.begin(), coinbase.end(),","class":"lineCov","hits":"1",},
{"lineNum":"  145","line":"                  [&strategy](const auto &s) { return strategy == s.name; });","class":"lineCov","hits":"1",},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"      // If strategy record doesn\'t exist, create a new one and insert it"},
{"lineNum":"  148","line":"      if (it == coinbase.end()) {","class":"lineCov","hits":"1",},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"        strategy_summary strat;","class":"lineCov","hits":"1",},
{"lineNum":"  151","line":"        strat.name = strategy;","class":"lineCov","hits":"1",},
{"lineNum":"  152","line":"        strat.returns.push_back(position.yield());","class":"lineCov","hits":"1",},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":"        // Only store symbol if it\'s matured"},
{"lineNum":"  155","line":"        if (position.yield() > handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  156","line":"          strat.symbols[position.symbol] = 1;","class":"lineNoCov","hits":"0",},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"        coinbase.emplace_back(strat);","class":"lineCov","hits":"1",},
{"lineNum":"  159","line":"      } else {","class":"lineCov","hits":"1",},
{"lineNum":"  160","line":"        // Otherwise just update the position count"},
{"lineNum":"  161","line":"        it->returns.push_back(position.yield());","class":"lineCov","hits":"1",},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"        // Only store symbol if it\'s matured"},
{"lineNum":"  164","line":"        if (position.yield() > handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  165","line":"          ++it->symbols[position.symbol];","class":"lineCov","hits":"1",},
{"lineNum":"  166","line":"      }"},
{"lineNum":"  167","line":"    }","class":"lineCov","hits":"1",},
{"lineNum":"  168","line":"  }"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"  // Sort strategy summaries by number of positions - an indicator of confidence"},
{"lineNum":"  171","line":"  // in the return: a high yield with few closed positions suggests a low"},
{"lineNum":"  172","line":"  // confidence"},
{"lineNum":"  173","line":"  std::sort(all_coins.begin(), all_coins.end(),","class":"lineCov","hits":"1",},
{"lineNum":"  174","line":"            [](const auto &a, const auto &b) {","class":"lineCov","hits":"1",},
{"lineNum":"  175","line":"              return a.returns.size() > b.returns.size();","class":"lineCov","hits":"1",},
{"lineNum":"  176","line":"            });"},
{"lineNum":"  177","line":""},
{"lineNum":"  178","line":"  std::sort(coinbase.begin(), coinbase.end(), [](const auto &a, const auto &b) {","class":"lineCov","hits":"1",},
{"lineNum":"  179","line":"    return a.returns.size() > b.returns.size();","class":"lineCov","hits":"1",},
{"lineNum":"  180","line":"  });"},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"  // Print succesful strategy summary for all coins"},
{"lineNum":"  183","line":"  out << \"<h1>All coins strategy summary</h1>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  184","line":"  out << \"<p>\" << open.size() << \" open positions, \" << closed.size()","class":"lineCov","hits":"1",},
{"lineNum":"  185","line":"      << \" closed</p>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  186","line":"  out << \"<pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  187","line":"  out << \"STRATEGY\\t\\tPOS\\t%\\t\\tMATURED SYMBOLS\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  188","line":"  for (const auto &strategy : all_coins)","class":"lineCov","hits":"1",},
{"lineNum":"  189","line":"    if (strategy.average_yield() > handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  190","line":"      out << strategy.name << \'\\t\' << strategy.returns.size() << \'\\t\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  191","line":"          << 100.0 * strategy.average_yield() << \"\\t\\t\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  192","line":"          << strategy.symbol_list() << \'\\n\';","class":"lineNoCov","hits":"0",},
{"lineNum":"  193","line":"  out << \"</pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"  // Print strategy summary for Coinbase coins"},
{"lineNum":"  196","line":"  out << \"<h1>Coinbase strategy summary</h1>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  197","line":"  out << \"<pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  198","line":"  for (const auto &strategy : coinbase)","class":"lineCov","hits":"1",},
{"lineNum":"  199","line":"    if (strategy.average_yield() > handt::sell_threshold)","class":"lineCov","hits":"1",},
{"lineNum":"  200","line":"      out << strategy.name << \'\\t\' << strategy.returns.size() << \'\\t\'","class":"lineNoCov","hits":"0",},
{"lineNum":"  201","line":"          << 100.0 * strategy.average_yield() << \"\\t\\t\"","class":"lineNoCov","hits":"0",},
{"lineNum":"  202","line":"          << strategy.symbol_list() << \'\\n\';","class":"lineNoCov","hits":"0",},
{"lineNum":"  203","line":"  out << \"</pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"  // Extract open Coinbase positions"},
{"lineNum":"  206","line":"  std::vector<handt::position> coinbase_open;","class":"lineCov","hits":"1",},
{"lineNum":"  207","line":"  for (const auto &position : open)","class":"lineCov","hits":"1",},
{"lineNum":"  208","line":"    if (position.symbol == \"ETH\" || position.symbol == \"BTC\" ||","class":"lineCov","hits":"1",},
{"lineNum":"  209","line":"        position.symbol == \"BCH\" || position.symbol == \"LTC\")","class":"lineCov","hits":"1",},
{"lineNum":"  210","line":"      coinbase_open.push_back(position);","class":"lineCov","hits":"1",},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"  // Sort open positions for display"},
{"lineNum":"  213","line":"  std::sort(","class":"lineCov","hits":"1",},
{"lineNum":"  214","line":"      coinbase_open.begin(), coinbase_open.end(),","class":"lineCov","hits":"1",},
{"lineNum":"  215","line":"      [](const auto &a, const auto &b) { return a.timestamp > b.timestamp; });","class":"lineCov","hits":"1",},
{"lineNum":"  216","line":""},
{"lineNum":"  217","line":"  // Print open Coinbase positions"},
{"lineNum":"  218","line":"  out << \"<h1>Coinbase open positions</h1>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  219","line":"  out << \"<pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  220","line":"  out << \"SYMBOL\\t%\\tSTRATEGY\\t\\tBUY\\tTIMEOUT (HOURS)\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  221","line":"  for (const auto &position : coinbase_open)","class":"lineCov","hits":"1",},
{"lineNum":"  222","line":"    out << position.symbol << \'\\t\' << position.yield() * 100.0 << \'\\t\'","class":"lineCov","hits":"1",},
{"lineNum":"  223","line":"        << position.strategy << \'\\t\' << position.buy_price << \'\\t\'","class":"lineCov","hits":"1",},
{"lineNum":"  224","line":"        << 24.0 - (handt::get_timestamp() - position.timestamp) / 3600.0","class":"lineCov","hits":"1",},
{"lineNum":"  225","line":"        << \'\\n\';","class":"lineCov","hits":"1",},
{"lineNum":"  226","line":"  out << \"</pre>\\n\";","class":"lineCov","hits":"1",},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"  std::cout << out.str();","class":"lineCov","hits":"1",},
{"lineNum":"  229","line":"}","class":"lineCov","hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "review.o", "date" : "2018-04-21 13:47:42", "instrumented" : 110, "covered" : 97,};
var merged_data = [];
