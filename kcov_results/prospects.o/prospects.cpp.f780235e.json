var data = {lines:[
{"lineNum":"    1","line":"#include \"handt.h\""},
{"lineNum":"    2","line":"#include \"low_frequency_trader.h\""},
{"lineNum":"    3","line":"#include <iostream>"},
{"lineNum":"    4","line":"#include <sstream>"},
{"lineNum":"    5","line":"#include <vector>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"int main() {","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"  std::stringstream out;","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"  // Test strategies on each series"},
{"lineNum":"   12","line":"  for (const auto &p : handt::get_prices())","class":"lineCov","hits":"3","possible_hits":"3",},
{"lineNum":"   13","line":"    if (!p.series.empty()) {","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"      const auto spot = p.series.back();","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   16","line":"      const auto &buys = lft::run_strategies(p.series);","class":"linePartCov","hits":"1","possible_hits":"2",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"      // If some strategies have triggered then print them"},
{"lineNum":"   19","line":"      if (!buys.empty()) {","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   20","line":"        out << p.symbol << \"\\t\" << spot << \" \";","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   21","line":"        for (const auto &buy : buys)","class":"lineCov","hits":"2","possible_hits":"2",},
{"lineNum":"   22","line":"          out << buy << \" \";","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   23","line":"        out << \"\\n\";","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   24","line":"      }","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   25","line":"    }","class":"linePartCov","hits":"1","possible_hits":"2",},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"  std::cout << out.str();","class":"linePartCov","hits":"1","possible_hits":"2",},
{"lineNum":"   28","line":"}","class":"linePartCov","hits":"1","possible_hits":"5",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "prospects.o", "date" : "2018-04-21 09:24:27", "instrumented" : 15, "covered" : 15,};
var merged_data = [];
