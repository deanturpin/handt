var data = {lines:[
{"lineNum":"    1","line":"#include \"handt.h\""},
{"lineNum":"    2","line":"#include <algorithm>"},
{"lineNum":"    3","line":"#include <iostream>"},
{"lineNum":"    4","line":"#include <iterator>"},
{"lineNum":"    5","line":"#include <sstream>"},
{"lineNum":"    6","line":"#include <vector>"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"int main() {","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"  // Configure debug"},
{"lineNum":"   11","line":"  std::stringstream out;","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"  const auto &reviewed_positions = handt::get_purged_positions();","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"  // Store new positions in a separate container"},
{"lineNum":"   16","line":"  std::decay_t<decltype(reviewed_positions)> new_positions;","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"  // Iterate over each new prospect to check we don\'t already hold a position"},
{"lineNum":"   19","line":"  for (const auto &prospect : handt::get_prospects()) {","class":"lineCov","hits":"3","possible_hits":"3",},
{"lineNum":"   20","line":"    for (const auto &strategy : prospect.strategies) {","class":"lineCov","hits":"2","possible_hits":"2",},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"      // Check if we already hold an open position with this currency/strategy"},
{"lineNum":"   23","line":"      const auto symbol = prospect.symbol;","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   24","line":"      const auto it = std::find_if(","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   25","line":"          reviewed_positions.cbegin(), reviewed_positions.cend(),","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   26","line":"          [&symbol, &strategy](const auto p) {","class":"lineCov","hits":"2","possible_hits":"2",},
{"lineNum":"   27","line":"            return p.open && p.symbol == symbol && p.strategy == strategy;","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   28","line":"          });"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"      // Create a position if we don\'t already hold one"},
{"lineNum":"   31","line":"      if (it == reviewed_positions.cend()) {","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"        // Initialise position with prospect details and store it"},
{"lineNum":"   34","line":"        handt::position position;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   35","line":"        position.symbol = prospect.symbol;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"        position.strategy = strategy;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   37","line":"        position.buy_price = position.sell_price = prospect.spot;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   38","line":"        new_positions.push_back(position);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   40","line":"    }","class":"linePartCov","hits":"1","possible_hits":"2",},
{"lineNum":"   41","line":"  }"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"  // Print all positions"},
{"lineNum":"   44","line":"  for (const auto &p : {reviewed_positions, new_positions})","class":"linePartCov","hits":"1","possible_hits":"3",},
{"lineNum":"   45","line":"    for (const auto &q : p)","class":"lineCov","hits":"2","possible_hits":"2",},
{"lineNum":"   46","line":"      out << q << \"\\n\";","class":"lineCov","hits":"1","possible_hits":"1",},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  std::cout << out.str();","class":"linePartCov","hits":"1","possible_hits":"2",},
{"lineNum":"   49","line":"}","class":"linePartCov","hits":"1","possible_hits":"6",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "consolidate.o", "date" : "2018-04-21 13:47:42", "instrumented" : 24, "covered" : 18,};
var merged_data = [];
